class <%=projectStackName%>_stage_stack {

  $stack_name = '<%=projectName%>'
  $image1 = '<%=dockerUrl%>/<%=businessArea%>/<%=projectName%>-stage:<%=version%>-stage'

  file { "/opt/docker_stacks/${stack_name}":
    ensure  => directory,
    }

    file { "/opt/docker_stacks/${stack_name}/docker-compose.yml":
      ensure  => file,
      require => File["/opt/docker_stacks/${stack_name}"],
      content => "version: '3.3'
services:
  srvc:
    image: ${image1}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 60s
      resources:
        limits:
          cpus: \"2.0\"
          memory: \"640M\"
    environment:
        - _JAVA_OPTIONS=-Xmx512m -Xms256m
        - SPRING_PROFILES_ACTIVE=stage,swagger,graphite
        #EUREKA
        - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=<%=registryUrlStage%>
        - EUREKA_CLIENT_ENABLED=true
        - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
        #BOOTSTRAP
        - SPRING_CLOUD_CONFIG_URI=<%=springCloudUrlStage%>
        #SSL
        - SERVER_SSL_ENABLED=false
        <% if (hasOauth2) { %>
        #OAUTH
        - SECURITY_OAUTH2_CLIENT_SCOPE=openid
        - SECURITY_OAUTH2_CLIENT_CLIENT_SECRET=<%=clientSecret%>
        - SECURITY_OAUTH2_RESOURCE_USER_INFO_URI=<%=oauth2UrlStage%>/auth/realms/aeropost/protocol/openid-connect/userinfo
        - SECURITY_OAUTH2_CLIENT_ACCESS_TOKEN_URI=<%=oauth2UrlStage%>/auth/realms/aeropost/protocol/openid-connect/token
        - SECURITY_OAUTH2_CLIENT_USER_AUTHORIZATION_URI=<%=oauth2UrlStage%>/auth/realms/aeropost/protocol/openid-connect/auth
        <% } %> 
        #GRAPHITE
        - GRAPHITE_ENABLED=true
        - GRAPHITE_HOST=<%=graphiteUrl%> 
        - GRAPHITE_PORT=2003
        - GRAPHITE_PREFIX=stage.<%=businessArea%>-api.<%=baseName%>  
        #REDIS
        - SPRING_CACHE_TYPE=redis
        - SPRING_REDIS_HOST=redis-stage
        - SPRING_REDIS_PORT=6379 
        - SPRING_REDIS_DATABASE=1
    networks:
    - swarm-net

networks:
  swarm-net:
    external:
      name: swarm-net",
    }

    docker::image { $image1: }

    docker::stack { $stack_name:
      ensure             => present,
      stack_name         => $stack_name,
      compose_files      => ["/opt/docker_stacks/${stack_name}/docker-compose.yml"],
      require            => [Class['docker'], ],
      subscribe          => [Docker::Image[$image1],
                            File["/opt/docker_stacks/${stack_name}/docker-compose.yml"], ],
      with_registry_auth => true,
    }

}
